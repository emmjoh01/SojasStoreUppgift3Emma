// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220207152509_FixedPhoneNumberPK")]
    partial class FixedPhoneNumberPK
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"), 1L, 1);

                    b.Property<decimal>("PercentPriceDrop")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CampaignId");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            CampaignId = 1,
                            PercentPriceDrop = 0.8m
                        },
                        new
                        {
                            CampaignId = 2,
                            PercentPriceDrop = 0.9m
                        });
                });

            modelBuilder.Entity("DAL.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            EmployeeId = 3,
                            Name = "Bröd"
                        },
                        new
                        {
                            DepartmentId = 2,
                            EmployeeId = 4,
                            Name = "Dryck"
                        },
                        new
                        {
                            DepartmentId = 3,
                            EmployeeId = 1,
                            Name = "Frukt"
                        },
                        new
                        {
                            DepartmentId = 4,
                            EmployeeId = 1,
                            Name = "Kött"
                        },
                        new
                        {
                            DepartmentId = 5,
                            EmployeeId = 6,
                            Name = "Mejeri"
                        },
                        new
                        {
                            DepartmentId = 6,
                            EmployeeId = 3,
                            Name = "Skafferi"
                        });
                });

            modelBuilder.Entity("DAL.Models.DepartmentProduct", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("DepartmentProducts");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            DepartmentId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            DepartmentId = 1,
                            ProductId = 11
                        },
                        new
                        {
                            DepartmentId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            DepartmentId = 2,
                            ProductId = 4
                        },
                        new
                        {
                            DepartmentId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            DepartmentId = 3,
                            ProductId = 6
                        },
                        new
                        {
                            DepartmentId = 3,
                            ProductId = 13
                        },
                        new
                        {
                            DepartmentId = 4,
                            ProductId = 7
                        },
                        new
                        {
                            DepartmentId = 4,
                            ProductId = 8
                        },
                        new
                        {
                            DepartmentId = 4,
                            ProductId = 2
                        },
                        new
                        {
                            DepartmentId = 5,
                            ProductId = 9
                        },
                        new
                        {
                            DepartmentId = 5,
                            ProductId = 10
                        },
                        new
                        {
                            DepartmentId = 6,
                            ProductId = 11
                        },
                        new
                        {
                            DepartmentId = 6,
                            ProductId = 12
                        },
                        new
                        {
                            DepartmentId = 6,
                            ProductId = 13
                        });
                });

            modelBuilder.Entity("DAL.Models.Email", b =>
                {
                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeEmail", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            EmployeeEmail = "haringenmail@sojas.se",
                            EmployeeId = 1
                        },
                        new
                        {
                            EmployeeEmail = "klonk@donk.se",
                            EmployeeId = 2
                        },
                        new
                        {
                            EmployeeEmail = "klonkydonk@sojas.se",
                            EmployeeId = 2
                        },
                        new
                        {
                            EmployeeEmail = "hugoisboss@sojas.se",
                            EmployeeId = 3
                        },
                        new
                        {
                            EmployeeEmail = "hugobossemalm@sojas.se",
                            EmployeeId = 3
                        },
                        new
                        {
                            EmployeeEmail = "fiaargalen@sojas.se",
                            EmployeeId = 4
                        },
                        new
                        {
                            EmployeeEmail = "f.galen@sojas.se",
                            EmployeeId = 4
                        },
                        new
                        {
                            EmployeeEmail = "kalasklas@sojas.se",
                            EmployeeId = 5
                        },
                        new
                        {
                            EmployeeEmail = "emillime@sojas.se",
                            EmployeeId = 6
                        },
                        new
                        {
                            EmployeeEmail = "emmatheclone@sojas.se",
                            EmployeeId = 7
                        },
                        new
                        {
                            EmployeeEmail = "johoemm@sojas.se",
                            EmployeeId = 8
                        });
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MentorEmployeeId")
                        .HasColumnType("int");

                    b.Property<long>("SSN")
                        .HasColumnType("bigint");

                    b.HasKey("EmployeeId");

                    b.HasIndex("MentorEmployeeId");

                    b.HasIndex("SSN")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Axel",
                            LastName = "Oxenstierna",
                            SSN = 158306166430L
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Klonky",
                            LastName = "Donky",
                            SSN = 191243568790L
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Hugo Bosse",
                            LastName = "Malmberg",
                            SSN = 196901011234L
                        },
                        new
                        {
                            EmployeeId = 4,
                            FirstName = "Fialotta",
                            LastName = "Galén",
                            SSN = 197303172143L
                        },
                        new
                        {
                            EmployeeId = 5,
                            FirstName = "Klas",
                            LastName = "Muckberg",
                            SSN = 198412136718L
                        },
                        new
                        {
                            EmployeeId = 6,
                            FirstName = "Emil",
                            LastName = "Lime",
                            SSN = 199304302112L
                        },
                        new
                        {
                            EmployeeId = 7,
                            FirstName = "Emma",
                            LastName = "Klohonen Johansson",
                            SSN = 200108214763L
                        },
                        new
                        {
                            EmployeeId = 8,
                            FirstName = "Emmsan",
                            LastName = "Johanssonskan",
                            SSN = 200108245261L
                        });
                });

            modelBuilder.Entity("DAL.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            Name = "Mjöl"
                        },
                        new
                        {
                            IngredientId = 2,
                            Name = "Jäst"
                        },
                        new
                        {
                            IngredientId = 3,
                            Name = "Salt"
                        },
                        new
                        {
                            IngredientId = 4,
                            Name = "Vatten"
                        },
                        new
                        {
                            IngredientId = 5,
                            Name = "Mjölk"
                        },
                        new
                        {
                            IngredientId = 6,
                            Name = "Smör"
                        },
                        new
                        {
                            IngredientId = 7,
                            Name = "Socker"
                        },
                        new
                        {
                            IngredientId = 8,
                            Name = "Aromer"
                        },
                        new
                        {
                            IngredientId = 9,
                            Name = "Passionsfrukt"
                        },
                        new
                        {
                            IngredientId = 10,
                            Name = "Gröna äpplen"
                        },
                        new
                        {
                            IngredientId = 11,
                            Name = "Oxfilé"
                        },
                        new
                        {
                            IngredientId = 12,
                            Name = "Fläskfilé"
                        },
                        new
                        {
                            IngredientId = 13,
                            Name = "Smulat bröd"
                        },
                        new
                        {
                            IngredientId = 14,
                            Name = "Vanilj"
                        });
                });

            modelBuilder.Entity("DAL.Models.PhoneNumber", b =>
                {
                    b.Property<string>("EmployeePhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("EmployeePhoneNumber", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            EmployeePhoneNumber = "1111111111",
                            EmployeeId = 1
                        },
                        new
                        {
                            EmployeePhoneNumber = "0792761426",
                            EmployeeId = 2
                        },
                        new
                        {
                            EmployeePhoneNumber = "0726384950",
                            EmployeeId = 3
                        },
                        new
                        {
                            EmployeePhoneNumber = "0705636178",
                            EmployeeId = 3
                        },
                        new
                        {
                            EmployeePhoneNumber = "0794563832",
                            EmployeeId = 4
                        },
                        new
                        {
                            EmployeePhoneNumber = "0734591435",
                            EmployeeId = 5
                        },
                        new
                        {
                            EmployeePhoneNumber = "0824527501",
                            EmployeeId = 5
                        },
                        new
                        {
                            EmployeePhoneNumber = "0768546326",
                            EmployeeId = 6
                        },
                        new
                        {
                            EmployeePhoneNumber = "0106793264",
                            EmployeeId = 6
                        },
                        new
                        {
                            EmployeePhoneNumber = "0704923456",
                            EmployeeId = 7
                        },
                        new
                        {
                            EmployeePhoneNumber = "0736785437",
                            EmployeeId = 8
                        });
                });

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("AmountInStore")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsOnCampaignId")
                        .HasColumnType("int");

                    b.Property<int>("LastCheckedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastCheckedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("IsOnCampaignId");

                    b.HasIndex("LastCheckedByEmployeeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AmountInStore = 2,
                            ExpirationDate = new DateTime(2022, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastCheckedByEmployeeId = 4,
                            LastCheckedDate = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tunnbröd",
                            Price = 29
                        },
                        new
                        {
                            ProductId = 2,
                            AmountInStore = 23,
                            ExpirationDate = new DateTime(2022, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastCheckedByEmployeeId = 3,
                            LastCheckedDate = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Korvbröd",
                            Price = 24
                        },
                        new
                        {
                            ProductId = 3,
                            AmountInStore = 73,
                            ExpirationDate = new DateTime(2023, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastCheckedByEmployeeId = 3,
                            LastCheckedDate = new DateTime(2021, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "RedBull",
                            Price = 16
                        },
                        new
                        {
                            ProductId = 4,
                            AmountInStore = 58,
                            ExpirationDate = new DateTime(2023, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsOnCampaignId = 2,
                            LastCheckedByEmployeeId = 6,
                            LastCheckedDate = new DateTime(2021, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CocaCola",
                            Price = 11
                        },
                        new
                        {
                            ProductId = 5,
                            AmountInStore = 2,
                            ExpirationDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastCheckedByEmployeeId = 4,
                            LastCheckedDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "Passionsfrukt",
                            Price = 4
                        },
                        new
                        {
                            ProductId = 6,
                            AmountInStore = 49,
                            ExpirationDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            LastCheckedByEmployeeId = 2,
                            LastCheckedDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "Gröna äpplen, Granny Smith",
                            Price = 6
                        },
                        new
                        {
                            ProductId = 7,
                            AmountInStore = 3,
                            ExpirationDate = new DateTime(2023, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastCheckedByEmployeeId = 3,
                            LastCheckedDate = new DateTime(2021, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oxfilé",
                            Price = 399
                        },
                        new
                        {
                            ProductId = 8,
                            AmountInStore = 17,
                            ExpirationDate = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastCheckedByEmployeeId = 7,
                            LastCheckedDate = new DateTime(2021, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fläskfilé",
                            Price = 199
                        },
                        new
                        {
                            ProductId = 9,
                            AmountInStore = 0,
                            ExpirationDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastCheckedByEmployeeId = 6,
                            LastCheckedDate = new DateTime(2021, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mjölk",
                            Price = 14
                        },
                        new
                        {
                            ProductId = 10,
                            AmountInStore = 35,
                            ExpirationDate = new DateTime(2023, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastCheckedByEmployeeId = 5,
                            LastCheckedDate = new DateTime(2021, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vispgrädde",
                            Price = 25
                        },
                        new
                        {
                            ProductId = 11,
                            AmountInStore = 2,
                            ExpirationDate = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsOnCampaignId = 1,
                            LastCheckedByEmployeeId = 3,
                            LastCheckedDate = new DateTime(2021, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ströbröd",
                            Price = 14
                        },
                        new
                        {
                            ProductId = 12,
                            AmountInStore = 13,
                            ExpirationDate = new DateTime(2023, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsOnCampaignId = 1,
                            LastCheckedByEmployeeId = 2,
                            LastCheckedDate = new DateTime(2021, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mjöl",
                            Price = 23
                        },
                        new
                        {
                            ProductId = 13,
                            AmountInStore = 17,
                            ExpirationDate = new DateTime(2024, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsOnCampaignId = 1,
                            LastCheckedByEmployeeId = 1,
                            LastCheckedDate = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vanillinsocker",
                            Price = 34
                        });
                });

            modelBuilder.Entity("DAL.Models.ProductIngredient", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("ProductIngredients");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            IngredientId = 2
                        },
                        new
                        {
                            ProductId = 1,
                            IngredientId = 3
                        },
                        new
                        {
                            ProductId = 1,
                            IngredientId = 5
                        },
                        new
                        {
                            ProductId = 1,
                            IngredientId = 6
                        },
                        new
                        {
                            ProductId = 2,
                            IngredientId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            IngredientId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            IngredientId = 3
                        },
                        new
                        {
                            ProductId = 2,
                            IngredientId = 5
                        },
                        new
                        {
                            ProductId = 2,
                            IngredientId = 6
                        },
                        new
                        {
                            ProductId = 3,
                            IngredientId = 7
                        },
                        new
                        {
                            ProductId = 3,
                            IngredientId = 8
                        },
                        new
                        {
                            ProductId = 3,
                            IngredientId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            IngredientId = 7
                        },
                        new
                        {
                            ProductId = 4,
                            IngredientId = 8
                        },
                        new
                        {
                            ProductId = 4,
                            IngredientId = 9
                        },
                        new
                        {
                            ProductId = 5,
                            IngredientId = 9
                        },
                        new
                        {
                            ProductId = 6,
                            IngredientId = 10
                        },
                        new
                        {
                            ProductId = 7,
                            IngredientId = 11
                        },
                        new
                        {
                            ProductId = 8,
                            IngredientId = 12
                        },
                        new
                        {
                            ProductId = 9,
                            IngredientId = 5
                        },
                        new
                        {
                            ProductId = 10,
                            IngredientId = 5
                        },
                        new
                        {
                            ProductId = 11,
                            IngredientId = 14
                        },
                        new
                        {
                            ProductId = 12,
                            IngredientId = 1
                        },
                        new
                        {
                            ProductId = 13,
                            IngredientId = 7
                        },
                        new
                        {
                            ProductId = 13,
                            IngredientId = 14
                        });
                });

            modelBuilder.Entity("DAL.Models.Department", b =>
                {
                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.DepartmentProduct", b =>
                {
                    b.HasOne("DAL.Models.Department", "Department")
                        .WithMany("DepartmentProduct")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Models.Product", "Product")
                        .WithMany("DepartmentProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAL.Models.Email", b =>
                {
                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany("Emails")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.HasOne("DAL.Models.Employee", "Mentor")
                        .WithMany("Trainee")
                        .HasForeignKey("MentorEmployeeId");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("DAL.Models.PhoneNumber", b =>
                {
                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.HasOne("DAL.Models.Campaign", "IsOnCampaign")
                        .WithMany("ProductsOnCampaign")
                        .HasForeignKey("IsOnCampaignId");

                    b.HasOne("DAL.Models.Employee", "LastCheckedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastCheckedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IsOnCampaign");

                    b.Navigation("LastCheckedByEmployee");
                });

            modelBuilder.Entity("DAL.Models.ProductIngredient", b =>
                {
                    b.HasOne("DAL.Models.Ingredient", "Ingredient")
                        .WithMany("ProductIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Models.Product", "Product")
                        .WithMany("ProductIngredients")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAL.Models.Campaign", b =>
                {
                    b.Navigation("ProductsOnCampaign");
                });

            modelBuilder.Entity("DAL.Models.Department", b =>
                {
                    b.Navigation("DepartmentProduct");
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Emails");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("DAL.Models.Ingredient", b =>
                {
                    b.Navigation("ProductIngredients");
                });

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.Navigation("DepartmentProduct");

                    b.Navigation("ProductIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
